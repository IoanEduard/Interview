
1. Adjancency Matrix
2. Adjancency List

Undirected graph

   2 -- 3
 / |   /|           ! We represent this graph in computer as an adjancency Matrix
1  |  / |                 - A matrix is repesented by rows x cols
 \ | /  |
   4 -- 5

(1) Rows and cols is the number of edges, in this case 5 x 5 matrix
(2) There are no loops, meaning an edge doesn't point to itself => the diagonal filled with 0

1 to 2 is also 2 to 1             2 to 1 yes             3 to 1 no          4 to 1 yes         5 to 1 no
1 to 3 no direct edge             2 to 3 yes             3 to 2 yes         4 to 2 yes         5 to 2 no
1 to 4                            2 to 4 yes             3 to 4 yes         4 to 3 yes         5 to 3 yes
1 to 5                            2 to 5 no              3 to 5 yes         4 to 5 yes         5 to 4 yes

NOTE: we check rows to cols indices.

      j  
   |  1  2  3  4  5
  -|------------------
i 1|  0  1  0  0  1
  -|------------------
  2|  1  0  1  1  0
  -|------------------
  3|  0  1  0  1  1
  -|------------------ 
  4|  1  1  1  1  1
  -|------------------
  5|  0  0  1  1  0
  -|------------------
 
 Definition of Adjancency Matrix:

    It is a Matrix A[n][n] where n is the number of vertices.
    How we fill the matrix:
       
       { A[i][j] = 1  ,if i and j are adjacent (dex definition: (a) - immediately preceding or following, (b) - nearby)
       {         = 0  ,otherwise

Side Note: Adjacent (dex definition): (a) - immediately preceding or following, 
                                      (b) - nearby,
                                      (c) - of two angles : having the vertex and one side in common

Space Complexity: O(n^2) n rows, n cols, n square

Adjacency List --------------------------------------------------------------------
   _____       _____      _____
1 |     | ->  | 2 | | -> | 4 | |
   -----       -----      ----- 
   _____       _____      _____      _____
2 |     | ->  | 1 | | -> | 3 | | -> | 4 | |
   -----       -----      -----      ----- 
   _____       _____      _____      _____
3 |     | ->  | 2 | | -> | 4 | | -> | 5 | |
   -----       -----      -----      ----- 
   _____       _____      _____      _____      _____
3 |     | ->  | 1 | | -> | 2 | | -> | 3 | | -> | 4 | |
   -----       -----      -----      -----      -----
   _____       _____      _____
5 |     | ->  | 3 | | -> | 4 | |
   -----       -----      ----- 

Space Complexity: O(n + 2e) - n number of edges
                            - 2e redudency for repeating edges


Conclusion -------------------------------------------------------
    Better to use Adjacency metrix when the graph is d͟e͟n͟s͟e graph.
    Better to use Adjacency list when graph is a s͟p͟a͟r͟s͟e graph.

    (1) Dense Graph is when each node is when connected to each node: e.g. Complete Graph

    1  -- 2
    | \ / | 
    |  /\ |         
    | /  \|
    3  -- 4      We can have a fith node that points to 1 and 3, we call this a complete graph
